<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>

 <!--본문내용 -->
<div class="content" id="myContent">
<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <link rel="stylesheet" href="css/main.css">
  <title>FromJ</title>
<style>
    :root{
      --bg1:#0f1428;
      --bg2:#1e2547;
      --accent:#38bdf8;
      --accent2:#0ea5e9;
      --text:#ffffff;
      --glass:rgba(56,189,248,.15);
      --stroke:rgba(255,255,255,.2);
      --cx:50vw;
      --cy:50vh;
      --r:0vmax;
    }
    *{box-sizing:border-box}
    html,body{height:100%;margin:0}
    body{
      font-family: system-ui, -apple-system, sans-serif;
      color:var(--text);
      background:
        radial-gradient(800px at 20% 20%, #1e40af 0%, transparent 50%),
        radial-gradient(600px at 80% 80%, #0c4a6e 0%, transparent 50%),
        linear-gradient(135deg, var(--bg2), var(--bg1));
      display:grid; place-items:center; overflow:hidden;
    }

    .center-wrap{position:relative; z-index:2}
    .fromj-btn{
      border:0; background:var(--glass); border-radius:20px; padding:24px 36px;
      font-size:26px; font-weight:700; color:var(--text);
      box-shadow: 0 8px 25px rgba(0,0,0,.3), inset 0 0 0 1px var(--stroke);
      backdrop-filter: blur(12px); cursor:pointer;
      transition: all .2s ease; position:relative;
    }
    .fromj-btn::before{
      content:""; position:absolute; inset:-1px; border-radius:inherit; padding:1px;
      background: conic-gradient(from 180deg, var(--accent), transparent 30%, var(--accent2), transparent 65%, var(--accent));
      -webkit-mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
      -webkit-mask-composite: xor; opacity:.4;
    }
    .fromj-btn:hover{ transform: translateY(-2px) scale(1.02); box-shadow: 0 15px 40px rgba(0,0,0,.4)}
    .fromj-btn:active{ transform: scale(.98) }

    .subtxt{margin-top:8px; opacity:.8; font-size:13px; text-align:center}

    .menu{
      position:fixed; inset:0; display:grid; place-items:center;
      clip-path: circle(var(--r) at var(--cx) var(--cy));
      transition: clip-path .6s cubic-bezier(.16,1,.3,1);
      pointer-events:none; z-index:1;
    }
    .menu::before{
      content:""; position:absolute; inset:0; backdrop-filter: blur(14px);
      background: 
        radial-gradient(1000px at 50% 50%, rgba(56,189,248,.12), transparent 60%),
        rgba(15,23,42,.85);
    }
    .menu-open .menu{ pointer-events:auto }
    .menu-open{ --r: 150vmax }

    .goo{
      position:relative; z-index:2; filter: url('#gooey');
      width:400px; height:400px; display:flex; align-items:center; justify-content:center;
    }

    .bubble{
      position:absolute; width:140px; height:140px; border-radius:50%;
      background: 
        radial-gradient(100px at 35% 30%, rgba(56,189,248,.4), rgba(14,165,233,.3) 40%, rgba(56,189,248,.15) 70%),
        linear-gradient(135deg, rgba(255,255,255,.1), rgba(56,189,248,.05));
      box-shadow: 
        inset 0 0 30px rgba(255,255,255,.1), 
        0 25px 35px rgba(0,0,0,.3),
        0 0 0 1px rgba(255,255,255,.15);
      display:flex; align-items:center; justify-content:center; text-align:center;
      color:#1e293b; text-decoration:none; font-weight:700; letter-spacing:.2px;
      cursor:pointer; overflow:hidden;
      transform: translateY(20px) scale(.9); opacity:0;
      animation: rise .7s cubic-bezier(.2,.85,.2,1) forwards;
    }

    .bubble .label{ font-size:16px; color:#0f172a; font-weight:800 }

    .bubble .dot{
      position:absolute; background: rgba(255,255,255,.6); border-radius:50%;
      filter: blur(.5px);
    }
    .bubble .dot.d1{ width:12px; height:12px; left:10%; top:20%; animation: float 4s ease-in-out infinite }
    .bubble .dot.d2{ width:8px; height:8px; right:15%; bottom:25%; animation: float 5s ease-in-out -.5s infinite }
    .bubble .dot.d3{ width:6px; height:6px; left:25%; bottom:18%; animation: float 6s ease-in-out -1s infinite }

    .ripple{
      position:absolute; border-radius:50%; transform: scale(0); opacity:.8;
      background: radial-gradient(circle, rgba(255,255,255,.8), rgba(56,189,248,.4) 50%, transparent 70%);
      animation: ripple 600ms ease-out forwards; pointer-events:none;
    }

    .bubble.burst{ animation: burst 400ms cubic-bezier(.16,1,.3,1) forwards }
    .bubble.regenerate{ animation: regenerate 600ms cubic-bezier(.34,1.56,.64,1) forwards }

    .close-hint{ position:fixed; bottom:20px; inset-inline:0; text-align:center; z-index:3; font-size:12px; opacity:.7 }

    @keyframes rise{
      to{ transform: translateY(0) scale(1); opacity:1 }
    }
    @keyframes float{
      0%,100%{ transform: translate(0,0) }
      50%{ transform: translate(0,-6px) }
    }
    @keyframes ripple{
      to{ transform: scale(2.5); opacity:0 }
    }
    @keyframes burst{
      0%{ transform: scale(1); opacity:1 }
      50%{ transform: scale(1.15); opacity:1 }
      100%{ transform: scale(.1); opacity:0 }
    }
    @keyframes regenerate{
      0%{ transform: scale(.1); opacity:0 }
      60%{ transform: scale(1.1); opacity:.8 }
      100%{ transform: scale(1); opacity:1 }
    }

    @media (max-width:560px){
      .goo{ width:320px; height:320px }
      .bubble{ width:110px; height:110px }
      .bubble .label{ font-size:13px }
    }
  </style>
</head>
<body>
  <main class="center-wrap">
    <button id="fromj" class="fromj-btn">FromJ</button>
    <div class="subtxt">눌러서 열기</div>
  </main>

  <section id="menu" class="menu">
    <div class="goo">
      <a class="bubble" data-link="ESJ.jsp" href="ESJ.jsp">
        <span class="label">어성준은 힘들다</span>
        <span class="dot d1"></span><span class="dot d2"></span><span class="dot d3"></span>
      </a>
      <a class="bubble" data-link="footballMain.jsp" href="footballMain.jsp">
        <span class="label">축구하는여자</span>
        <span class="dot d1"></span><span class="dot d2"></span><span class="dot d3"></span>
      </a>
      <a class="bubble" data-link="seoulfood.jsp" href="seoulfood.jsp">
        <span class="label">서울맛집지도</span>
        <span class="dot d1"></span><span class="dot d2"></span><span class="dot d3"></span>
      </a>
    </div>
    <div class="close-hint">ESC로 닫기</div>
  </section>

  <svg width="0" height="0" style="position:absolute">
    <defs>
      <filter id="gooey">
        <feGaussianBlur in="SourceGraphic" stdDeviation="6" result="blur"/>
        <feColorMatrix in="blur" values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 16 -6" result="goo"/>
        <feBlend in="SourceGraphic" in2="goo"/>
      </filter>
    </defs>
  </svg>

  <script>
    const root = document.documentElement;
    const trigger = document.getElementById('fromj');
    const menu = document.getElementById('menu');
    const bubbles = document.querySelectorAll('.bubble');

    // 원형 배치 함수
    function positionBubbles(){
      const totalBubbles = bubbles.length;
      const radius = 130; // 원의 반지름
      const startAngle = -90; // 12시 방향부터 시작

      bubbles.forEach((bubble, index) => {
        const angle = (startAngle + (360 / totalBubbles) * index) * (Math.PI / 180);
        const x = Math.cos(angle) * radius;
        const y = Math.sin(angle) * radius;
        
        bubble.style.left = `calc(50% + ${x}px - 70px)`; // 70px = bubble width/2
        bubble.style.top = `calc(50% + ${y}px - 70px)`;  // 70px = bubble height/2
        bubble.style.animationDelay = `${0.1 + index * 0.1}s`;
      });
    }

    // 페이지 로드 시 배치
    positionBubbles();

    function openMenu(x, y){
      root.style.setProperty('--cx', x + 'px');
      root.style.setProperty('--cy', y + 'px');
      document.body.classList.add('menu-open');
    }
    function closeMenu(){ document.body.classList.remove('menu-open'); }

    trigger.addEventListener('click', (e)=>{
      const rect = e.currentTarget.getBoundingClientRect();
      openMenu(rect.left + rect.width/2, rect.top + rect.height/2);
    });

    bubbles.forEach((bubble)=>{
      bubble.addEventListener('click', (e)=>{
        e.preventDefault();
        const link = e.currentTarget.getAttribute('href');
        const rect = e.currentTarget.getBoundingClientRect();
        const x = e.clientX - rect.left, y = e.clientY - rect.top;
        
        // 리플 효과
        const ripple = document.createElement('span');
        ripple.className = 'ripple';
        const size = Math.max(rect.width, rect.height);
        ripple.style.width = ripple.style.height = size + 'px';
        ripple.style.left = (x - size/2) + 'px';
        ripple.style.top = (y - size/2) + 'px';
        e.currentTarget.appendChild(ripple);

        // 버스트 애니메이션
        e.currentTarget.classList.add('burst');
        
        setTimeout(()=>{
          // 재생성 애니메이션
          e.currentTarget.classList.remove('burst');
          e.currentTarget.classList.add('regenerate');
          
          setTimeout(()=>{
            e.currentTarget.classList.remove('regenerate');
            window.location.assign(link);
          }, 200);
        }, 400);

        setTimeout(()=> ripple.remove(), 800);
      });
    });

    window.addEventListener('keydown', (e)=>{ 
      if(e.key === 'Escape') closeMenu(); 
    });
  </script>
</body>
</html>

<section>
	<p>페이지 내용</p>
</section>
<jsp:include page="chat.jsp"></jsp:include>
</div>