<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>

<!--본문내용 -->
<div class="content" id="myContent">
<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <link rel="stylesheet" href="css/main.css">
  <title>FromJ</title>
</head>
<body>
  <main class="center-wrap">
    <button id="fromj" class="fromj-btn">FromJ</button>
    <div class="subtxt">눌러서 열기</div>
  </main>

  <section id="menu" class="menu">
    <div class="goo">
      <a class="bubble" href="ESJ.jsp">
        <span class="label">어성준은 힘들다</span>
        <span class="dot d1"></span><span class="dot d2"></span><span class="dot d3"></span>
      </a>
      <a class="bubble" href="footballMain.jsp">
        <span class="label">축구하는여자</span>
        <span class="dot d1"></span><span class="dot d2"></span><span class="dot d3"></span>
      </a>
      <a class="bubble" href="seoulfood.jsp">
        <span class="label">서울맛집지도</span>
        <span class="dot d1"></span><span class="dot d2"></span><span class="dot d3"></span>
      </a>
    </div>
    <div class="close-hint">ESC로 닫기</div>
  </section>

  <svg width="0" height="0" style="position:absolute">
    <defs>
      <filter id="gooey">
        <feGaussianBlur in="SourceGraphic" stdDeviation="6" result="blur"/>
        <feColorMatrix in="blur" values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 16 -6" result="goo"/>
        <feBlend in="SourceGraphic" in2="goo"/>
      </filter>
    </defs>
  </svg>

  <script>
    const root = document.documentElement;
    const trigger = document.getElementById('fromj');
    const bubbles = Array.from(document.querySelectorAll('.bubble'));

    /* 반경/배치 */
    function calcRadius(){ return Math.max(180, Math.min(280, Math.min(window.innerWidth, window.innerHeight) * 0.28)); }

    function positionBubbles(){
      const total = bubbles.length;
      const radius = calcRadius();
      const rect = trigger.getBoundingClientRect();
      const cx = rect.left + rect.width/2;
      const cy = rect.top  + rect.height/2;

      const angles = total===3 ? [-90, 30, 210] : Array.from({length:total}, (_,i)=>-90+(360/total)*i);

      bubbles.forEach((bubble, i)=>{
        const a = angles[i]*(Math.PI/180);
        const bw = bubble.offsetWidth || 140, bh = bubble.offsetHeight || 140;
        const x = cx + Math.cos(a)*radius - bw/2;
        const y = cy + Math.sin(a)*radius - bh/2;
        bubble.style.left = x+'px';
        bubble.style.top  = y+'px';
        bubble.style.animationDelay = `${0.3 + i*0.2}s`;
      });
    }

    /* 레이아웃 안정 후 배치 */
    function safePosition(){ requestAnimationFrame(()=> positionBubbles()); }

    /* 버블 상태 리셋 (다시 열 때 사라짐 방지) */
    function resetBubbles(){
      bubbles.forEach(b=>{
        b.classList.remove('burst','recharge');
        // 초기 상태
        b.style.opacity = 0;
        b.style.transform = 'translateY(20px) scale(.9)';
        // 남아있는 ripple 제거
        b.querySelectorAll('.ripple').forEach(r=>r.remove());
      });
    }

    function rechargeBubbles(){
      bubbles.forEach((b,i)=>{
        setTimeout(()=>{
          b.classList.add('recharge');
          setTimeout(()=> b.classList.remove('recharge'), 800);
        }, i*150);
      });
    }

    /* 열기/닫기 */
    function openMenu(x,y){
      root.style.setProperty('--cx', x+'px');
      root.style.setProperty('--cy', y+'px');
      resetBubbles();     // ← 열기 전에 항상 초기화
      safePosition();     // 위치 보정
      document.body.classList.add('menu-open');
      setTimeout(rechargeBubbles, 500);
    }
    function closeMenu(){ document.body.classList.remove('menu-open'); }

    /* 트리거 */
    trigger.addEventListener('click', (e)=>{
      const r = e.currentTarget.getBoundingClientRect();
      openMenu(r.left + r.width/2, r.top + r.height/2);
    });

    /* 버블 클릭: ripple + burst + 이동 */
    bubbles.forEach(bubble=>{
      bubble.addEventListener('click', (e)=>{
        e.preventDefault();
        const link = bubble.getAttribute('href');

        const r = bubble.getBoundingClientRect();
        const x = e.clientX - r.left;
        const y = e.clientY - r.top;

        const ripple = document.createElement('span');
        ripple.className = 'ripple';
        const size = Math.max(r.width, r.height) * 1.1;
        ripple.style.width = ripple.style.height = size + 'px';
        ripple.style.left = (x - size/2) + 'px';
        ripple.style.top  = (y - size/2) + 'px';
        bubble.appendChild(ripple);

        bubble.classList.add('burst');

        setTimeout(()=>{ window.location.href = link; }, 500);
        setTimeout(()=> ripple.remove(), 1000);
      });
    });

    /* 초기 준비 */
    window.addEventListener('load', safePosition);
    window.addEventListener('resize', safePosition);
    window.addEventListener('scroll',  safePosition);

    /* ESC로 닫기 */
    window.addEventListener('keydown', (e)=>{ if(e.key==='Escape') closeMenu(); });
  </script>
</body>
</html>

<section>
  <p>페이지 내용</p>
</section>
<jsp:include page="chat.jsp"></jsp:include>
</div>
