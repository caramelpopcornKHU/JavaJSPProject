<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>

 <!--본문내용 -->
<div class="content" id="myContent">
<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <link rel="stylesheet" href="css/main.css">
  <title>FromJ</title>
</head>
<body>
  <main class="center-wrap">
    <button id="fromj" class="fromj-btn">FromJ</button>
    <div class="subtxt">눌러서 열기</div>
  </main>

  <section id="menu" class="menu">
    <div class="goo">
      <a class="bubble" data-link="ESJ.jsp" href="ESJ.jsp">
        <span class="label">어성준은 힘들다</span>
        <span class="dot d1"></span><span class="dot d2"></span><span class="dot d3"></span>
      </a>
      <a class="bubble" data-link="footballMain.jsp" href="footballMain.jsp">
        <span class="label">축구하는여자</span>
        <span class="dot d1"></span><span class="dot d2"></span><span class="dot d3"></span>
      </a>
      <a class="bubble" data-link="seoulfood.jsp" href="seoulfood.jsp">
        <span class="label">서울맛집지도</span>
        <span class="dot d1"></span><span class="dot d2"></span><span class="dot d3"></span>
      </a>
    </div>
    <div class="close-hint">ESC로 닫기</div>
  </section>

  <svg width="0" height="0" style="position:absolute">
    <defs>
      <filter id="gooey">
        <feGaussianBlur in="SourceGraphic" stdDeviation="6" result="blur"/>
        <feColorMatrix in="blur" values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 16 -6" result="goo"/>
        <feBlend in="SourceGraphic" in2="goo"/>
      </filter>
    </defs>
  </svg>

  <script>
    const root = document.documentElement;
    const trigger = document.getElementById('fromj');
    const menu = document.getElementById('menu');
    const bubbles = document.querySelectorAll('.bubble');

    // 원형 배치 함수 (FromJ 기준 시계방향)
    function positionBubbles(){
      const totalBubbles = bubbles.length;
      const radius = 130;
      const startAngle = -90; // FromJ 위치 기준 12시 방향

      bubbles.forEach((bubble, index) => {
        const angle = (startAngle + (360 / totalBubbles) * index) * (Math.PI / 180);
        const x = Math.cos(angle) * radius;
        const y = Math.sin(angle) * radius;
        
        bubble.style.left = `calc(50% + ${x}px - 70px)`;
        bubble.style.top = `calc(50% + ${y}px - 70px)`;
        bubble.style.animationDelay = `${0.1 + index * 0.1}s`;
      });
    }

    // 물풍선 재충전 애니메이션
    function rechargeBubbles(){
      bubbles.forEach((bubble, index) => {
        bubble.classList.remove('recharge');
        setTimeout(() => {
          bubble.classList.add('recharge');
          setTimeout(() => bubble.classList.remove('recharge'), 800);
        }, index * 100);
      });
    }

    positionBubbles();

    function openMenu(x, y){
      root.style.setProperty('--cx', x + 'px');
      root.style.setProperty('--cy', y + 'px');
      document.body.classList.add('menu-open');
      // 메뉴 열릴 때 재충전 효과
      setTimeout(() => rechargeBubbles(), 300);
    }
    
    function closeMenu(){ 
      document.body.classList.remove('menu-open'); 
    }

    trigger.addEventListener('click', (e)=>{
      const rect = e.currentTarget.getBoundingClientRect();
      openMenu(rect.left + rect.width/2, rect.top + rect.height/2);
    });

    bubbles.forEach((bubble)=>{
      bubble.addEventListener('click', (e)=>{
        e.preventDefault();
        const link = e.currentTarget.getAttribute('href');
        const rect = e.currentTarget.getBoundingClientRect();
        const x = e.clientX - rect.left, y = e.clientY - rect.top;
        
        const ripple = document.createElement('span');
        ripple.className = 'ripple';
        const size = Math.max(rect.width, rect.height);
        ripple.style.width = ripple.style.height = size + 'px';
        ripple.style.left = (x - size/2) + 'px';
        ripple.style.top = (y - size/2) + 'px';
        e.currentTarget.appendChild(ripple);

        e.currentTarget.classList.add('burst');
        
        setTimeout(()=>{
          e.currentTarget.classList.remove('burst');
          e.currentTarget.classList.add('regenerate');
          
          setTimeout(()=>{
            e.currentTarget.classList.remove('regenerate');
            window.location.assign(link);
          }, 200);
        }, 400);

        setTimeout(()=> ripple.remove(), 800);
      });
    });

    window.addEventListener('keydown', (e)=>{ 
      if(e.key === 'Escape') closeMenu(); 
    });
  </script>
</body>
</html>

<section>
	<p>페이지 내용</p>
</section>
<jsp:include page="chat.jsp"></jsp:include>
</div>